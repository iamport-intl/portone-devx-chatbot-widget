name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
      - development
      - production

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Setup Environment Variables
        run: |
          echo "Current branch: $GITHUB_REF"
          if [[ "$GITHUB_REF" == "refs/heads/production" ]]; then
            echo "DEPLOY_ENV=production" >> $GITHUB_ENV
            cp .env.production .env || echo "Warning: .env.production file not found"
          elif [[ "$GITHUB_REF" == "refs/heads/staging" ]]; then
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
            cp .env.staging .env || echo "Warning: .env.staging file not found"
          elif [[ "$GITHUB_REF" == "refs/heads/development" ]]; then
            echo "DEPLOY_ENV=development" >> $GITHUB_ENV
            cp .env.development .env || echo "Warning: .env.development file not found"
          else
            echo "DEPLOY_ENV=test" >> $GITHUB_ENV
            cp .env.test .env || echo "Warning: .env.test file not found"
          fi
          echo "NODE_ENV=$DEPLOY_ENV" >> $GITHUB_ENV

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install --include=dev

      - name: Build Widget using Webpack
        run: npm run build:webpack

      - name: Commit Generated Public Files
        run: |
          echo "Preparing to commit changes in public folder..."
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          
          git add public/
          
          if git diff-index --quiet HEAD -- public/; then
            echo "No changes detected in the public folder. Skipping commit."
          else
            echo "Changes detected in public folder. Committing..."
            git commit -m "chore: update public folder with generated files for branch ${GITHUB_REF} [skip ci]"
            git push origin HEAD:${GITHUB_REF#refs/heads/}
          fi